// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider             = "prisma-client-py"
  recursive_type_depth = 5
  interface            = "sync"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  email        String        @id
  username     String        @unique
  password     String?
  type         SignupType    @default(value: EMAIL)
  disabled     Boolean       @default(false)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  refreshToken RefreshToken?
  Files        File[] // Relation field for user's files
  DownloadLogs DownloadLog[] // Relation field for user's download logs
}

model RefreshToken {
  user      User     @relation(fields: [userEmail], references: [email], onDelete: Cascade)
  userEmail String   @unique
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model File {
  id           Int           @id @default(autoincrement())
  userEmail    String?
  fileName     String
  filePath     String
  fileSize     String
  uploadDate   DateTime      @default(now())
  contentType  String
  User         User?         @relation(fields: [userEmail], references: [email], onDelete: Cascade)
  DownloadLogs DownloadLog[]
}

model DownloadLog {
  id           Int      @id @default(autoincrement())
  fileId       Int
  userEmail    String?
  downloadDate DateTime @default(now())
  userIP       String?
  File         File     @relation(fields: [fileId], references: [id], onDelete: Cascade)
  User         User?    @relation(fields: [userEmail], references: [email], onDelete: Cascade)
}

enum SignupType {
  EMAIL
  GOOGLE
}
